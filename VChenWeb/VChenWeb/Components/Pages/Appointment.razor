@page "/appointment"
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

<PageTitle>Appointment</PageTitle>

<h1>Appointment</h1>

<main class="container">
    <MudGrid>
        <MudItem xs="12" sm="12">
            <MudPaper Class="pa-4">
                <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                    <MudGrid Class="justify-content-center align-items-center">
                        <MudItem xs="4">
                            <label>Tanggal</label>
                        </MudItem>
                        <MudItem xs="8" class="d-flex">
                            <VChenWeb.Components.Form.DatePickerMulti Label="Woww" @bind-MarkedDates="markedDates" MarkedDayColor="green" />
                        </MudItem>
                        <MudItem xs="4">
                            <label>Jam</label>
                        </MudItem>
                        <MudItem xs="8">
                            <MudTimePicker Color="MudBlazor.Color.Primary" MinuteSelectionStep="1" Text="03:37 PM" Class="mt-0" />
                        </MudItem>
                        <MudItem xs="4">
                            <label>Lokasi Klinik</label>
                        </MudItem>
                        <MudItem xs="8">
                            <MudSelect T="string" Label="Lokasi Klinik" AnchorOrigin="Origin.BottomCenter">
                                <MudSelectItem Value="@("Manyar")" />
                            </MudSelect>
                        </MudItem>
                        <MudItem xs="4">
                            <label>App. dng Dokter</label>
                        </MudItem>
                        <MudItem xs="8">
                            <MudTextField T="string" Label="App. dng Dokter"/>
                        </MudItem>
                        <MudItem xs="4">
                            <label>Keterangan</label>
                        </MudItem>
                        <MudItem xs="8">
                            <MudTextField T="string" Label="Keterangan" Variant="Variant.Text" Lines="5" />
                        </MudItem>
                        @* <MudTextField T="string" Label="Username" Required="true" RequiredError="User name is required!" />
                        <MudTextField T="string" Label="Email" Required="true" RequiredError="Email is required!"
                                      Validation="@(new EmailAddressAttribute() {ErrorMessage = "The email address is invalid"})" />
                        <MudTextField T="string" Label="Password" HelperText="Choose a strong password" @ref="pwField1"
                                      InputType="InputType.Password"
                                      Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Required="true"
                                      RequiredError="Password is required!" />
                        <MudTextField T="string"
                                      Label="Password" HelperText="Repeat the password" InputType="InputType.Password"
                                      Validation="@(new Func<string, string>(PasswordMatch))" /> *@
                        @* <div class="d-flex">
                            <MudRadioGroup T="string" Required="true" RequiredError="Account type is required!">
                                <MudRadio Option="@("Personal")">Personal</MudRadio>
                                <MudRadio Option="@("Professional")">Professional</MudRadio>
                            </MudRadioGroup>
                        </div>
                        <div class="d-flex align-center justify-space-between">
                            <MudCheckBox T="bool" Required="true" RequiredError="You must agree" Label="I agree!" />
                            <MudButton Variant="Variant.Filled" Color="MudBlazor.Color.Primary" Disabled="@(!success)" Class="ml-auto">Register</MudButton>
                        </div> *@
                    </MudGrid>
                </MudForm>
            </MudPaper>
            <MudPaper Class="pa-4 mt-4">
                <MudButton Variant="Variant.Filled" Color="MudBlazor.Color.Primary" DisableElevation="true" OnClick="@(()=>form.Validate())">Validate</MudButton>
                <MudButton Variant="Variant.Filled" Color="MudBlazor.Color.Secondary" DisableElevation="true" OnClick="@(()=>form.ResetAsync())" Class="mx-2">Reset</MudButton>
                <MudButton Variant="Variant.Filled" DisableElevation="true" OnClick="@(()=>form.ResetValidation())">Reset Validation</MudButton>
            </MudPaper>
        </MudItem>
    </MudGrid>
</main>

@for (int x = 1; x < 6; x++)
{
    <li>
        Item @x
    </li>
}

@foreach (DateTime date in markedDates)
{
    // Pass the Dto properties to the component
    <p>@date.ToString()</p>
}




@code {
    private List<DateTime> markedDates = new List<DateTime>();

    bool success;
    string[] errors = { };
    MudTextField<string> pwField1;
    MudForm form;

    private IEnumerable<string> PasswordStrength(string pw)
    {
        if (string.IsNullOrWhiteSpace(pw))
        {
            yield return "Password is required!";
            yield break;
        }
        if (pw.Length < 8)
            yield return "Password must be at least of length 8";
        if (!Regex.IsMatch(pw, @"[A-Z]"))
            yield return "Password must contain at least one capital letter";
        if (!Regex.IsMatch(pw, @"[a-z]"))
            yield return "Password must contain at least one lowercase letter";
        if (!Regex.IsMatch(pw, @"[0-9]"))
            yield return "Password must contain at least one digit";
    }

    private string PasswordMatch(string arg)
    {
        if (pwField1.Value != arg)
            return "Passwords don't match";
        return null;
    }
}
